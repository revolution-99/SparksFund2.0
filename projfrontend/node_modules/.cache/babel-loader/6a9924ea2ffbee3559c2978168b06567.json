{"ast":null,"code":"import React from \"react\";\nimport Nav from \"../core/Nav\";\n\nconst loadRazorPayScript = src => {\n  return new Promise(resolve => {\n    // Creation of the element script in React we can't create <script src=\"https://checkout.razorpay.com/v1/checkout.js\"></script> directly.\n    const script = document.createElement(\"script\");\n    script.src = src; // The appendChild() method appends a node as the last child of a node. Similar function as append() in java script\n\n    document.body.appendChild(script); // onload execute a JavaScript immediately after a page has been loaded:\n\n    script.onload = () => {\n      resolve(true);\n    };\n\n    script.onerror = () => {\n      resolve(false);\n    };\n\n    document.body.appendChild(script);\n  });\n}; // if (document.domain === 'localhost') {\n//     // developement\n// }\n// else{\n//     // production\n// }\n// This is the same synatx as above which indicates that if we are in the local host we are in the developement mode\n\n\nconst __DEV__ = document.domain === 'localhost';\n\nasync function displayRazorpay() {\n  const res = await loadRazorPayScript(\"https://checkout.razorpay.com/v1/checkout.js\");\n\n  if (!res) {\n    alert(\"Payment failed. Please check your network connection\");\n    return;\n  } // Making an API call to fetch the data\n\n\n  const data = await fetch(\"http://localhost:3000/razorpay\", {\n    method: 'POST',\n    mode: 'no-cors'\n  }).then(t => t.json()); // For reference\n\n  console.log(data); // From this line to the end all are copied from Razorpay documentation\n\n  const options = {\n    key: __DEV__ ? \"rzp_test_HteZ41XEHmnp8l\" : \"PRODUCTION_KEY_LIVE_MODE\",\n    // First is Key ID generated from the Dashboard when the test mode is on otherwise load the key of the live mode\n    //\"data\" is fetched from the backend\n    amount: data.amount.toString(),\n    // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise\n    currency: data.currency,\n    order_id: data.id,\n    name: \"The Spark Fund\",\n    description: \"Donate for a cause\",\n    // ***********************************Image Yet to be done***********************\n    image: \"https://example.com/your_logo\",\n    handler: function (response) {\n      alert(response.razorpay_payment_id);\n      alert(response.razorpay_order_id);\n      alert(response.razorpay_signature);\n    },\n    //   Prefile datas with the existing users\n    //   prefill: {\n    //     name: \"Gaurav Kumar\",\n    //     email: \"gaurav.kumar@example.com\",\n    //     contact: \"9999999999\",\n    //   },\n    notes: {\n      address: \"Razorpay Corporate Office\"\n    },\n    theme: {\n      color: \"#3399cc\"\n    }\n  };\n  var paymentObject = new window.Razorpay(options);\n  paymentObject.on(\"payment.failed\", function (response) {\n    alert(response.error.code);\n    alert(response.error.description);\n    alert(response.error.source);\n    alert(response.error.step);\n    alert(response.error.reason);\n    alert(response.error.metadata.order_id);\n    alert(response.error.metadata.payment_id);\n  });\n\n  document.getElementById(\"rzp-button1\").onclick = function (e) {\n    paymentObject.open();\n    e.preventDefault();\n  };\n}\n\n; //   return (\n//     <div>\n//       <Nav />\n//       <h3>This is the payment page.</h3>\n//       PaymentPage();\n//     </div>\n//   );\n\nexport default displayRazorpay;","map":{"version":3,"sources":["D:/The Spark Fund/projfrontend/src/payment/PaymentPage.js"],"names":["React","Nav","loadRazorPayScript","src","Promise","resolve","script","document","createElement","body","appendChild","onload","onerror","__DEV__","domain","displayRazorpay","res","alert","data","fetch","method","mode","then","t","json","console","log","options","key","amount","toString","currency","order_id","id","name","description","image","handler","response","razorpay_payment_id","razorpay_order_id","razorpay_signature","notes","address","theme","color","paymentObject","window","Razorpay","on","error","code","source","step","reason","metadata","payment_id","getElementById","onclick","e","open","preventDefault"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Nav from \"../core/Nav\";\r\n\r\nconst loadRazorPayScript = (src) => {\r\n  return new Promise((resolve) => {\r\n\r\n    // Creation of the element script in React we can't create <script src=\"https://checkout.razorpay.com/v1/checkout.js\"></script> directly.\r\n    const script = document.createElement(\"script\");\r\n    script.src = src;\r\n\r\n    // The appendChild() method appends a node as the last child of a node. Similar function as append() in java script\r\n    document.body.appendChild(script);\r\n    // onload execute a JavaScript immediately after a page has been loaded:\r\n    script.onload = () =>{\r\n        resolve(true)\r\n    }\r\n    script.onerror = () =>{\r\n        resolve(false)\r\n    }\r\n    document.body.appendChild(script)\r\n  });\r\n};\r\n\r\n// if (document.domain === 'localhost') {\r\n//     // developement\r\n// }\r\n// else{\r\n//     // production\r\n// }\r\n// This is the same synatx as above which indicates that if we are in the local host we are in the developement mode\r\nconst __DEV__ = document.domain === 'localhost'\r\n\r\n\r\n  async function displayRazorpay () {\r\n    const res = await loadRazorPayScript(\"https://checkout.razorpay.com/v1/checkout.js\")\r\n    if (!res) {\r\n        alert(\"Payment failed. Please check your network connection\")\r\n        return\r\n    }\r\n\r\n    // Making an API call to fetch the data\r\n    const data = await fetch(\"http://localhost:3000/razorpay\", \r\n    {\r\n        method : 'POST',\r\n        mode : 'no-cors'\r\n    })\r\n    .then((t) => \r\n        t.json()\r\n    )\r\n\r\n    // For reference\r\n    console.log(data);\r\n\r\n    // From this line to the end all are copied from Razorpay documentation\r\n    const options = {\r\n      key: __DEV__ ? \"rzp_test_HteZ41XEHmnp8l\" : \"PRODUCTION_KEY_LIVE_MODE\", // First is Key ID generated from the Dashboard when the test mode is on otherwise load the key of the live mode\r\n    //\"data\" is fetched from the backend\r\n      amount: data.amount.toString(), // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise\r\n      currency: data.currency,\r\n      order_id : data.id,\r\n      name: \"The Spark Fund\",\r\n      description: \"Donate for a cause\",\r\n\r\n      // ***********************************Image Yet to be done***********************\r\n\r\n      image: \"https://example.com/your_logo\",\r\n      handler: function (response) {\r\n        alert(response.razorpay_payment_id);\r\n        alert(response.razorpay_order_id);\r\n        alert(response.razorpay_signature);\r\n      },\r\n\r\n    //   Prefile datas with the existing users\r\n    //   prefill: {\r\n    //     name: \"Gaurav Kumar\",\r\n    //     email: \"gaurav.kumar@example.com\",\r\n    //     contact: \"9999999999\",\r\n    //   },\r\n      notes: {\r\n        address: \"Razorpay Corporate Office\",\r\n      },\r\n      theme: {\r\n        color: \"#3399cc\",\r\n      },\r\n    };\r\n    var paymentObject = new window.Razorpay(options);\r\n    paymentObject.on(\"payment.failed\", function (response) {\r\n      alert(response.error.code);\r\n      alert(response.error.description);\r\n      alert(response.error.source);\r\n      alert(response.error.step);\r\n      alert(response.error.reason);\r\n      alert(response.error.metadata.order_id);\r\n      alert(response.error.metadata.payment_id);\r\n    });\r\n    document.getElementById(\"rzp-button1\").onclick = function (e) {\r\n      paymentObject.open();\r\n      e.preventDefault();\r\n    };\r\n  };\r\n\r\n//   return (\r\n//     <div>\r\n//       <Nav />\r\n//       <h3>This is the payment page.</h3>\r\n//       PaymentPage();\r\n//     </div>\r\n//   );\r\n\r\n\r\n\r\nexport default displayRazorpay;\r\n"]},"metadata":{},"sourceType":"module"}